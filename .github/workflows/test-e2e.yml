name: Test e2e
on: 
  push:
    branches:
      - '**'
  workflow_dispatch: {}


jobs:
  build-cdk-image:
    runs-on: amd-runner-2204
    timeout-minutes: 20
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.x

    - name: Build cdk docker image
      run: make build-docker
    
    - name: Save cdk image to archive
      run: docker save --output /tmp/cdk.tar cdk
    
    - name: Upload archive
      uses: actions/upload-artifact@v4
      with:
        name: cdk
        path: /tmp/cdk.tar

  test-e2e:
    name: E2E tests (different groups)
    runs-on: amd-runner-2204
    timeout-minutes: 30
    needs: build-cdk-image
    strategy:
      fail-fast: false
      matrix:
        e2e-group:
          - "fork12-pessimistic"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Checkout kurtosis-cdk
      uses: actions/checkout@v4
      with:
        repository: 0xPolygon/kurtosis-cdk
        path: kurtosis-cdk
        ref: v0.2.25
    
    - name: Install Kurtosis CDK tools
      uses: ./kurtosis-cdk/.github/actions/setup-kurtosis-cdk
    
    - name: Setup Bats and bats libs
      uses: bats-core/bats-action@2.0.0
    
    - name: Download cdk archive
      uses: actions/download-artifact@v4
      with:
        name: cdk
        path: /tmp
    
    - name: Load cdk image
      run: |
        docker load --input /tmp/cdk.tar
        docker image ls -a

    - name: Run E2E tests
      run: make test-e2e-${{ matrix.e2e-group }}
      working-directory: test
      env:
        KURTOSIS_FOLDER: ${{ github.workspace }}/kurtosis-cdk
        BATS_LIB_PATH: /usr/lib/
        AGGLAYER_PROVER_SP1_KEY: ${{ secrets.SP1_PRIVATE_KEY }}
    
    - name: Dump enclave logs
      if: failure()
      run: kurtosis dump ./dump

    - name: Generate archive name
      if: failure()
      run: |
        archive_name="dump_run_with_args_${{matrix.e2e-group}}_${{ github.run_id }}"
        echo "ARCHIVE_NAME=${archive_name}" >> "$GITHUB_ENV"
        echo "Generated archive name: ${archive_name}"
        kurtosis service exec cdk cdk-node-001 'cat /etc/cdk/cdk-node-config.toml' > ./dump/cdk-node-config.toml

    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: ./dump

  test-e2e-multi-pp:
    name: E2E tests
    needs: build-cdk-image
    strategy:
      fail-fast: false
      matrix:
        go-version: [ 1.22.x ]
        goarch: [ "amd64" ]
        e2e-group:
          - "fork12-multi-pessimistic"
    runs-on: amd-runner-2204
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
      env:
        GOARCH: ${{ matrix.goarch }}

    - name: Build Tools
      run: make build-tools
      
    - name: Checkout kurtosis-cdk
      uses: actions/checkout@v4
      with:
        repository: 0xPolygon/kurtosis-cdk
        path: kurtosis-cdk
        ref: main
    
    - name: Install Kurtosis CDK tools
      uses: ./kurtosis-cdk/.github/actions/setup-kurtosis-cdk

    - name: Setup Bats and bats libs
      uses: bats-core/bats-action@2.0.0
    
    - name: Download cdk archive
      uses: actions/download-artifact@v4
      with:
        name: cdk
        path: /tmp
    
    - name: Load cdk image
      run: |
        docker load --input /tmp/cdk.tar
        docker image ls -a

    - name: Run E2E tests
      run: make test-e2e-fork12-multi-pessimistic
      working-directory: test
      env:
        KURTOSIS_FOLDER: ${{ github.workspace }}/kurtosis-cdk
        BATS_LIB_PATH: /usr/lib/
        AGGLAYER_PROVER_SP1_KEY: ${{ secrets.SP1_PRIVATE_KEY }}
    
    - name: Dump enclave logs
      if: failure()
      run: kurtosis dump ./dump

    - name: Generate archive name
      if: failure()
      run: |
        archive_name="dump_run_with_args_${{matrix.e2e-group}}_${{ github.run_id }}"
        echo "ARCHIVE_NAME=${archive_name}" >> "$GITHUB_ENV"
        echo "Generated archive name: ${archive_name}"
        kurtosis service exec cdk cdk-node-001 'cat /etc/cdk/cdk-node-config.toml' > ./dump/cdk-node-config.toml

    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARCHIVE_NAME }}
        path: ./dump
