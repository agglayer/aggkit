// Proto definition for Agglayer Certificate Submition Service

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.3
// source: node/agglayer_certificate_submission_service.proto

package node

import (
	types "github.com/agglayer/aggkit/agglayer/proto/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The kind of error that occurred and that are reported by the service.
type ErrorKind int32

const (
	// Unspecified error.
	ErrorKind_ERROR_KIND_UNSPECIFIED ErrorKind = 0
	// The signature verification failed.
	ErrorKind_ERROR_KIND_SIGNATURE_VERIFICATION ErrorKind = 1
)

// Enum value maps for ErrorKind.
var (
	ErrorKind_name = map[int32]string{
		0: "ERROR_KIND_UNSPECIFIED",
		1: "ERROR_KIND_SIGNATURE_VERIFICATION",
	}
	ErrorKind_value = map[string]int32{
		"ERROR_KIND_UNSPECIFIED":            0,
		"ERROR_KIND_SIGNATURE_VERIFICATION": 1,
	}
)

func (x ErrorKind) Enum() *ErrorKind {
	p := new(ErrorKind)
	*p = x
	return p
}

func (x ErrorKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorKind) Descriptor() protoreflect.EnumDescriptor {
	return file_node_agglayer_certificate_submission_service_proto_enumTypes[0].Descriptor()
}

func (ErrorKind) Type() protoreflect.EnumType {
	return &file_node_agglayer_certificate_submission_service_proto_enumTypes[0]
}

func (x ErrorKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorKind.Descriptor instead.
func (ErrorKind) EnumDescriptor() ([]byte, []int) {
	return file_node_agglayer_certificate_submission_service_proto_rawDescGZIP(), []int{0}
}

// Type used to submit a certificate.
type SubmitCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The certificate to submit.
	Certificate *types.Certificate `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *SubmitCertificateRequest) Reset() {
	*x = SubmitCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_agglayer_certificate_submission_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCertificateRequest) ProtoMessage() {}

func (x *SubmitCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_agglayer_certificate_submission_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCertificateRequest.ProtoReflect.Descriptor instead.
func (*SubmitCertificateRequest) Descriptor() ([]byte, []int) {
	return file_node_agglayer_certificate_submission_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubmitCertificateRequest) GetCertificate() *types.Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// Type used as response to a certificate submission.
type SubmitCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The certificate id of the submitted certificate.
	CertificateId *types.CertificateId `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
}

func (x *SubmitCertificateResponse) Reset() {
	*x = SubmitCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_agglayer_certificate_submission_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCertificateResponse) ProtoMessage() {}

func (x *SubmitCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_agglayer_certificate_submission_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCertificateResponse.ProtoReflect.Descriptor instead.
func (*SubmitCertificateResponse) Descriptor() ([]byte, []int) {
	return file_node_agglayer_certificate_submission_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubmitCertificateResponse) GetCertificateId() *types.CertificateId {
	if x != nil {
		return x.CertificateId
	}
	return nil
}

var File_node_agglayer_certificate_submission_service_proto protoreflect.FileDescriptor

var file_node_agglayer_certificate_submission_service_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x65, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x67,
	0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x2a, 0x4e, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x25,
	0x0a, 0x21, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x49, 0x47,
	0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x32, 0x8c, 0x01, 0x0a, 0x1c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x61, 0x67,
	0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x67, 0x6b,
	0x69, 0x74, 0x2f, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x3b, 0x6e, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_node_agglayer_certificate_submission_service_proto_rawDescOnce sync.Once
	file_node_agglayer_certificate_submission_service_proto_rawDescData = file_node_agglayer_certificate_submission_service_proto_rawDesc
)

func file_node_agglayer_certificate_submission_service_proto_rawDescGZIP() []byte {
	file_node_agglayer_certificate_submission_service_proto_rawDescOnce.Do(func() {
		file_node_agglayer_certificate_submission_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_agglayer_certificate_submission_service_proto_rawDescData)
	})
	return file_node_agglayer_certificate_submission_service_proto_rawDescData
}

var file_node_agglayer_certificate_submission_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_node_agglayer_certificate_submission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_node_agglayer_certificate_submission_service_proto_goTypes = []interface{}{
	(ErrorKind)(0),                    // 0: agglayer.node.v1.ErrorKind
	(*SubmitCertificateRequest)(nil),  // 1: agglayer.node.v1.SubmitCertificateRequest
	(*SubmitCertificateResponse)(nil), // 2: agglayer.node.v1.SubmitCertificateResponse
	(*types.Certificate)(nil),         // 3: agglayer.protocol.types.v1.Certificate
	(*types.CertificateId)(nil),       // 4: agglayer.protocol.types.v1.CertificateId
}
var file_node_agglayer_certificate_submission_service_proto_depIdxs = []int32{
	3, // 0: agglayer.node.v1.SubmitCertificateRequest.certificate:type_name -> agglayer.protocol.types.v1.Certificate
	4, // 1: agglayer.node.v1.SubmitCertificateResponse.certificate_id:type_name -> agglayer.protocol.types.v1.CertificateId
	1, // 2: agglayer.node.v1.CertificateSubmissionService.SubmitCertificate:input_type -> agglayer.node.v1.SubmitCertificateRequest
	2, // 3: agglayer.node.v1.CertificateSubmissionService.SubmitCertificate:output_type -> agglayer.node.v1.SubmitCertificateResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_node_agglayer_certificate_submission_service_proto_init() }
func file_node_agglayer_certificate_submission_service_proto_init() {
	if File_node_agglayer_certificate_submission_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_agglayer_certificate_submission_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_agglayer_certificate_submission_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_agglayer_certificate_submission_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_agglayer_certificate_submission_service_proto_goTypes,
		DependencyIndexes: file_node_agglayer_certificate_submission_service_proto_depIdxs,
		EnumInfos:         file_node_agglayer_certificate_submission_service_proto_enumTypes,
		MessageInfos:      file_node_agglayer_certificate_submission_service_proto_msgTypes,
	}.Build()
	File_node_agglayer_certificate_submission_service_proto = out.File
	file_node_agglayer_certificate_submission_service_proto_rawDesc = nil
	file_node_agglayer_certificate_submission_service_proto_goTypes = nil
	file_node_agglayer_certificate_submission_service_proto_depIdxs = nil
}
