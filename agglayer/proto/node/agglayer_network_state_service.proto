// Proto definition for Agglayer Network State Service

syntax = "proto3";

package proto;
option go_package = "github.com/agglayer/aggkit/agglayer/proto/node;node";
import "types/certificate_header.proto";
import "types/certificate.proto";

// Service for querying agglayer network state.
service AgglayerNetworkStateService {
  // Method used to get a CertificateHeader for a particular CertificateId.
  rpc GetCertificateHeader(GetCertificateHeaderRequest) returns (GetCertificateHeaderResponse);

  // Method used to get the latest known certificate header for a network.
  rpc GetLatestKnownCertificateHeader(GetLatestKnownCertificateHeaderRequest) returns (GetLatestKnownCertificateHeaderResponse);

  // Method used to get the latest settled certificate header for a network.
  rpc GetLatestSettledCertificateHeader(GetLatestSettledCertificateHeaderRequest) returns (GetLatestSettledCertificateHeaderResponse);

  // Method used to get the latest pending certificate header for a network.
  rpc GetLatestPendingCertificateHeader(GetLatestPendingCertificateHeaderRequest) returns (GetLatestPendingCertificateHeaderResponse);
}

// Request to get a CertificateHeader for a particular CertificateId.
message GetCertificateHeaderRequest {
  // The certificate identifier.
  types.CertificateId certificate_id = 1;
}

// Response to the CertificateHeader request.
message GetCertificateHeaderResponse {
  // The certificate header.
  types.CertificateHeader certificate_header = 1;
}

// Request to get the latest known certificate header for a network.
message GetLatestKnownCertificateHeaderRequest {
  // The network identifier.
  uint32 network_id = 1;
}

// Response to the latest known certificate header request.
message GetLatestKnownCertificateHeaderResponse {
  // The latest known certificate header.
  types.CertificateHeader certificate_header = 1;
}

// Request to get the latest settled certificate header for a network.
message GetLatestSettledCertificateHeaderRequest {
  // The network identifier.
  uint32 network_id = 1;
}

// Response to the latest settled certificate header request.
message GetLatestSettledCertificateHeaderResponse {
  // The latest settled certificate header.
  types.CertificateHeader certificate_header = 1;
}

// Request to get the latest pending certificate header for a network.
message GetLatestPendingCertificateHeaderRequest {
  // The network identifier.
  uint32 network_id = 1;
}

// Response to the latest pending certificate header request.
message GetLatestPendingCertificateHeaderResponse {
  // The latest pending certificate header.
  types.CertificateHeader certificate_header = 1;
}