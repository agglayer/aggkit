// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.3
// source: types/bridge_exit.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the leaf.
type LeafType int32

const (
	// Unspecified leaf type.
	LeafType_LEAF_TYPE_UNSPECIFIED LeafType = 0
	// Transfer leaf type.
	LeafType_LEAF_TYPE_TRANSFER LeafType = 1
	// Message leaf type.
	LeafType_LEAF_TYPE_MESSAGE LeafType = 2
)

// Enum value maps for LeafType.
var (
	LeafType_name = map[int32]string{
		0: "LEAF_TYPE_UNSPECIFIED",
		1: "LEAF_TYPE_TRANSFER",
		2: "LEAF_TYPE_MESSAGE",
	}
	LeafType_value = map[string]int32{
		"LEAF_TYPE_UNSPECIFIED": 0,
		"LEAF_TYPE_TRANSFER":    1,
		"LEAF_TYPE_MESSAGE":     2,
	}
)

func (x LeafType) Enum() *LeafType {
	p := new(LeafType)
	*p = x
	return p
}

func (x LeafType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeafType) Descriptor() protoreflect.EnumDescriptor {
	return file_types_bridge_exit_proto_enumTypes[0].Descriptor()
}

func (LeafType) Type() protoreflect.EnumType {
	return &file_types_bridge_exit_proto_enumTypes[0]
}

func (x LeafType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeafType.Descriptor instead.
func (LeafType) EnumDescriptor() ([]byte, []int) {
	return file_types_bridge_exit_proto_rawDescGZIP(), []int{0}
}

// Represents a token bridge exit from the network.
type BridgeExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the leaf.
	LeafType LeafType `protobuf:"varint,1,opt,name=leaf_type,json=leafType,proto3,enum=proto.types.LeafType" json:"leaf_type,omitempty"`
	// Unique ID for the token being transferred.
	TokenInfo *TokenInfo `protobuf:"bytes,2,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
	// Network which the token is transferred to
	DestNetwork uint32 `protobuf:"varint,3,opt,name=dest_network,json=destNetwork,proto3" json:"dest_network,omitempty"`
	// Address which will own the received token
	DestAddress *FixedBytes20 `protobuf:"bytes,4,opt,name=dest_address,json=destAddress,proto3" json:"dest_address,omitempty"`
	// Token amount sent
	Amount *FixedBytes32 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	// Metadata for the bridge exit
	Metadata *FixedBytes32 `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *BridgeExit) Reset() {
	*x = BridgeExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_bridge_exit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BridgeExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BridgeExit) ProtoMessage() {}

func (x *BridgeExit) ProtoReflect() protoreflect.Message {
	mi := &file_types_bridge_exit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BridgeExit.ProtoReflect.Descriptor instead.
func (*BridgeExit) Descriptor() ([]byte, []int) {
	return file_types_bridge_exit_proto_rawDescGZIP(), []int{0}
}

func (x *BridgeExit) GetLeafType() LeafType {
	if x != nil {
		return x.LeafType
	}
	return LeafType_LEAF_TYPE_UNSPECIFIED
}

func (x *BridgeExit) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

func (x *BridgeExit) GetDestNetwork() uint32 {
	if x != nil {
		return x.DestNetwork
	}
	return 0
}

func (x *BridgeExit) GetDestAddress() *FixedBytes20 {
	if x != nil {
		return x.DestAddress
	}
	return nil
}

func (x *BridgeExit) GetAmount() *FixedBytes32 {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *BridgeExit) GetMetadata() *FixedBytes32 {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Encapsulates the information to uniquely identify a token on the origin
// network.
type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Network which the token originates from
	OriginNetwork uint32 `protobuf:"varint,1,opt,name=origin_network,json=originNetwork,proto3" json:"origin_network,omitempty"`
	// The address of the token on the origin network
	OriginTokenAddress *FixedBytes20 `protobuf:"bytes,2,opt,name=origin_token_address,json=originTokenAddress,proto3" json:"origin_token_address,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_bridge_exit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_bridge_exit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_types_bridge_exit_proto_rawDescGZIP(), []int{1}
}

func (x *TokenInfo) GetOriginNetwork() uint32 {
	if x != nil {
		return x.OriginNetwork
	}
	return 0
}

func (x *TokenInfo) GetOriginTokenAddress() *FixedBytes20 {
	if x != nil {
		return x.OriginTokenAddress
	}
	return nil
}

var File_types_bridge_exit_proto protoreflect.FileDescriptor

var file_types_bridge_exit_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x65,
	0x78, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x11, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x02, 0x0a, 0x0a, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x45, 0x78, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x66,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x32, 0x30, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x33, 0x32, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x33, 0x32, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f,
	0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x4b, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x32, 0x30, 0x52, 0x12, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a,
	0x54, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4c,
	0x45, 0x41, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x02, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x67,
	0x6b, 0x69, 0x74, 0x2f, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_bridge_exit_proto_rawDescOnce sync.Once
	file_types_bridge_exit_proto_rawDescData = file_types_bridge_exit_proto_rawDesc
)

func file_types_bridge_exit_proto_rawDescGZIP() []byte {
	file_types_bridge_exit_proto_rawDescOnce.Do(func() {
		file_types_bridge_exit_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_bridge_exit_proto_rawDescData)
	})
	return file_types_bridge_exit_proto_rawDescData
}

var file_types_bridge_exit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_types_bridge_exit_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_types_bridge_exit_proto_goTypes = []interface{}{
	(LeafType)(0),        // 0: proto.types.LeafType
	(*BridgeExit)(nil),   // 1: proto.types.BridgeExit
	(*TokenInfo)(nil),    // 2: proto.types.TokenInfo
	(*FixedBytes20)(nil), // 3: proto.types.FixedBytes20
	(*FixedBytes32)(nil), // 4: proto.types.FixedBytes32
}
var file_types_bridge_exit_proto_depIdxs = []int32{
	0, // 0: proto.types.BridgeExit.leaf_type:type_name -> proto.types.LeafType
	2, // 1: proto.types.BridgeExit.token_info:type_name -> proto.types.TokenInfo
	3, // 2: proto.types.BridgeExit.dest_address:type_name -> proto.types.FixedBytes20
	4, // 3: proto.types.BridgeExit.amount:type_name -> proto.types.FixedBytes32
	4, // 4: proto.types.BridgeExit.metadata:type_name -> proto.types.FixedBytes32
	3, // 5: proto.types.TokenInfo.origin_token_address:type_name -> proto.types.FixedBytes20
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_types_bridge_exit_proto_init() }
func file_types_bridge_exit_proto_init() {
	if File_types_bridge_exit_proto != nil {
		return
	}
	file_types_bytes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_types_bridge_exit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BridgeExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_bridge_exit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_bridge_exit_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_bridge_exit_proto_goTypes,
		DependencyIndexes: file_types_bridge_exit_proto_depIdxs,
		EnumInfos:         file_types_bridge_exit_proto_enumTypes,
		MessageInfos:      file_types_bridge_exit_proto_msgTypes,
	}.Build()
	File_types_bridge_exit_proto = out.File
	file_types_bridge_exit_proto_rawDesc = nil
	file_types_bridge_exit_proto_goTypes = nil
	file_types_bridge_exit_proto_depIdxs = nil
}
