// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/agglayer/aggkit/aggsender/types"
	mock "github.com/stretchr/testify/mock"
)

// AuthProofServiceServer is an autogenerated mock type for the AuthProofServiceServer type
type AuthProofServiceServer struct {
	mock.Mock
}

type AuthProofServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *AuthProofServiceServer) EXPECT() *AuthProofServiceServer_Expecter {
	return &AuthProofServiceServer_Expecter{mock: &_m.Mock}
}

// FetchAuthProof provides a mock function with given fields: _a0, _a1
func (_m *AuthProofServiceServer) FetchAuthProof(_a0 context.Context, _a1 *types.FetchAuthProofRequest) (*types.FetchAuthProofResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for FetchAuthProof")
	}

	var r0 *types.FetchAuthProofResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *types.FetchAuthProofRequest) (*types.FetchAuthProofResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *types.FetchAuthProofRequest) *types.FetchAuthProofResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.FetchAuthProofResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *types.FetchAuthProofRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AuthProofServiceServer_FetchAuthProof_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchAuthProof'
type AuthProofServiceServer_FetchAuthProof_Call struct {
	*mock.Call
}

// FetchAuthProof is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 *types.FetchAuthProofRequest
func (_e *AuthProofServiceServer_Expecter) FetchAuthProof(_a0 interface{}, _a1 interface{}) *AuthProofServiceServer_FetchAuthProof_Call {
	return &AuthProofServiceServer_FetchAuthProof_Call{Call: _e.mock.On("FetchAuthProof", _a0, _a1)}
}

func (_c *AuthProofServiceServer_FetchAuthProof_Call) Run(run func(_a0 context.Context, _a1 *types.FetchAuthProofRequest)) *AuthProofServiceServer_FetchAuthProof_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*types.FetchAuthProofRequest))
	})
	return _c
}

func (_c *AuthProofServiceServer_FetchAuthProof_Call) Return(_a0 *types.FetchAuthProofResponse, _a1 error) *AuthProofServiceServer_FetchAuthProof_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AuthProofServiceServer_FetchAuthProof_Call) RunAndReturn(run func(context.Context, *types.FetchAuthProofRequest) (*types.FetchAuthProofResponse, error)) *AuthProofServiceServer_FetchAuthProof_Call {
	_c.Call.Return(run)
	return _c
}

// mustEmbedUnimplementedAuthProofServiceServer provides a mock function with no fields
func (_m *AuthProofServiceServer) mustEmbedUnimplementedAuthProofServiceServer() {
	_m.Called()
}

// AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedAuthProofServiceServer'
type AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedAuthProofServiceServer is a helper method to define mock.On call
func (_e *AuthProofServiceServer_Expecter) mustEmbedUnimplementedAuthProofServiceServer() *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call {
	return &AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedAuthProofServiceServer")}
}

func (_c *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call) Run(run func()) *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call) Return() *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call) RunAndReturn(run func()) *AuthProofServiceServer_mustEmbedUnimplementedAuthProofServiceServer_Call {
	_c.Run(run)
	return _c
}

// NewAuthProofServiceServer creates a new instance of AuthProofServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthProofServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthProofServiceServer {
	mock := &AuthProofServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
