// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// isImportedBridgeExit_Claim is an autogenerated mock type for the isImportedBridgeExit_Claim type
type isImportedBridgeExit_Claim struct {
	mock.Mock
}

type isImportedBridgeExit_Claim_Expecter struct {
	mock *mock.Mock
}

func (_m *isImportedBridgeExit_Claim) EXPECT() *isImportedBridgeExit_Claim_Expecter {
	return &isImportedBridgeExit_Claim_Expecter{mock: &_m.Mock}
}

// isImportedBridgeExit_Claim provides a mock function with no fields
func (_m *isImportedBridgeExit_Claim) isImportedBridgeExit_Claim() {
	_m.Called()
}

// isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isImportedBridgeExit_Claim'
type isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call struct {
	*mock.Call
}

// isImportedBridgeExit_Claim is a helper method to define mock.On call
func (_e *isImportedBridgeExit_Claim_Expecter) isImportedBridgeExit_Claim() *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call {
	return &isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call{Call: _e.mock.On("isImportedBridgeExit_Claim")}
}

func (_c *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call) Run(run func()) *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call) Return() *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call {
	_c.Call.Return()
	return _c
}

func (_c *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call) RunAndReturn(run func()) *isImportedBridgeExit_Claim_isImportedBridgeExit_Claim_Call {
	_c.Run(run)
	return _c
}

// newIsImportedBridgeExit_Claim creates a new instance of isImportedBridgeExit_Claim. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIsImportedBridgeExit_Claim(t interface {
	mock.TestingT
	Cleanup(func())
}) *isImportedBridgeExit_Claim {
	mock := &isImportedBridgeExit_Claim{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
