// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafeAggSenderServer is an autogenerated mock type for the UnsafeAggSenderServer type
type UnsafeAggSenderServer struct {
	mock.Mock
}

type UnsafeAggSenderServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeAggSenderServer) EXPECT() *UnsafeAggSenderServer_Expecter {
	return &UnsafeAggSenderServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedAggSenderServer provides a mock function with no fields
func (_m *UnsafeAggSenderServer) mustEmbedUnimplementedAggSenderServer() {
	_m.Called()
}

// UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedAggSenderServer'
type UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedAggSenderServer is a helper method to define mock.On call
func (_e *UnsafeAggSenderServer_Expecter) mustEmbedUnimplementedAggSenderServer() *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call {
	return &UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call{Call: _e.mock.On("mustEmbedUnimplementedAggSenderServer")}
}

func (_c *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call) Run(run func()) *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call) Return() *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call) RunAndReturn(run func()) *UnsafeAggSenderServer_mustEmbedUnimplementedAggSenderServer_Call {
	_c.Run(run)
	return _c
}

// NewUnsafeAggSenderServer creates a new instance of UnsafeAggSenderServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeAggSenderServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeAggSenderServer {
	mock := &UnsafeAggSenderServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
