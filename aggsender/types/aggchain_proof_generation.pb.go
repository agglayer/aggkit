// Proto definition for AggSender service

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: aggchain_proof_generation.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message for generating aggchain proof.
type GenerateAggchainProofRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The start block for which the aggchain proof is requested.
	StartBlock uint64 `protobuf:"varint,1,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	// The max end block for which the aggchain proof is requested.
	MaxEndBlock uint64 `protobuf:"varint,2,opt,name=max_end_block,json=maxEndBlock,proto3" json:"max_end_block,omitempty"`
	// L1 Info tree root. (hash)
	L1InfoTreeRootHash *FixedBytes32 `protobuf:"bytes,3,opt,name=l1_info_tree_root_hash,json=l1InfoTreeRootHash,proto3" json:"l1_info_tree_root_hash,omitempty"`
	// L1 Info tree leaf
	L1InfoTreeLeaf *L1InfoTreeLeaf `protobuf:"bytes,4,opt,name=l1_info_tree_leaf,json=l1InfoTreeLeaf,proto3" json:"l1_info_tree_leaf,omitempty"`
	// L1 Info tree proof. ([32]hash)
	L1InfoTreeMerkleProof *MerkleProof `protobuf:"bytes,5,opt,name=l1_info_tree_merkle_proof,json=l1InfoTreeMerkleProof,proto3" json:"l1_info_tree_merkle_proof,omitempty"`
	// Map of the GER with their ger leaf. Note: the GER (string) is a base64 encoded string of the GER digest.
	GerLeaves map[string]*ClaimFromMainnet `protobuf:"bytes,6,rep,name=ger_leaves,json=gerLeaves,proto3" json:"ger_leaves,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// bridge exits
	ImportedBridgeExits []*ImportedBridgeExit `protobuf:"bytes,7,rep,name=imported_bridge_exits,json=importedBridgeExits,proto3" json:"imported_bridge_exits,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GenerateAggchainProofRequest) Reset() {
	*x = GenerateAggchainProofRequest{}
	mi := &file_aggchain_proof_generation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateAggchainProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAggchainProofRequest) ProtoMessage() {}

func (x *GenerateAggchainProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aggchain_proof_generation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAggchainProofRequest.ProtoReflect.Descriptor instead.
func (*GenerateAggchainProofRequest) Descriptor() ([]byte, []int) {
	return file_aggchain_proof_generation_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateAggchainProofRequest) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *GenerateAggchainProofRequest) GetMaxEndBlock() uint64 {
	if x != nil {
		return x.MaxEndBlock
	}
	return 0
}

func (x *GenerateAggchainProofRequest) GetL1InfoTreeRootHash() *FixedBytes32 {
	if x != nil {
		return x.L1InfoTreeRootHash
	}
	return nil
}

func (x *GenerateAggchainProofRequest) GetL1InfoTreeLeaf() *L1InfoTreeLeaf {
	if x != nil {
		return x.L1InfoTreeLeaf
	}
	return nil
}

func (x *GenerateAggchainProofRequest) GetL1InfoTreeMerkleProof() *MerkleProof {
	if x != nil {
		return x.L1InfoTreeMerkleProof
	}
	return nil
}

func (x *GenerateAggchainProofRequest) GetGerLeaves() map[string]*ClaimFromMainnet {
	if x != nil {
		return x.GerLeaves
	}
	return nil
}

func (x *GenerateAggchainProofRequest) GetImportedBridgeExits() []*ImportedBridgeExit {
	if x != nil {
		return x.ImportedBridgeExits
	}
	return nil
}

// The aggchain proof response message.
type GenerateAggchainProofResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Aggchain proof.
	AggchainProof []byte `protobuf:"bytes,1,opt,name=aggchain_proof,json=aggchainProof,proto3" json:"aggchain_proof,omitempty"`
	// The start block of the aggchain proof.
	StartBlock uint64 `protobuf:"varint,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	// The end block of the aggchain proof.
	EndBlock uint64 `protobuf:"varint,3,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	// Local exit root hash.
	LocalExitRootHash *FixedBytes32 `protobuf:"bytes,4,opt,name=local_exit_root_hash,json=localExitRootHash,proto3" json:"local_exit_root_hash,omitempty"`
	// Custom chain data.
	CustomChainData []byte `protobuf:"bytes,5,opt,name=custom_chain_data,json=customChainData,proto3" json:"custom_chain_data,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateAggchainProofResponse) Reset() {
	*x = GenerateAggchainProofResponse{}
	mi := &file_aggchain_proof_generation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateAggchainProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAggchainProofResponse) ProtoMessage() {}

func (x *GenerateAggchainProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aggchain_proof_generation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAggchainProofResponse.ProtoReflect.Descriptor instead.
func (*GenerateAggchainProofResponse) Descriptor() ([]byte, []int) {
	return file_aggchain_proof_generation_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateAggchainProofResponse) GetAggchainProof() []byte {
	if x != nil {
		return x.AggchainProof
	}
	return nil
}

func (x *GenerateAggchainProofResponse) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *GenerateAggchainProofResponse) GetEndBlock() uint64 {
	if x != nil {
		return x.EndBlock
	}
	return 0
}

func (x *GenerateAggchainProofResponse) GetLocalExitRootHash() *FixedBytes32 {
	if x != nil {
		return x.LocalExitRootHash
	}
	return nil
}

func (x *GenerateAggchainProofResponse) GetCustomChainData() []byte {
	if x != nil {
		return x.CustomChainData
	}
	return nil
}

var File_aggchain_proof_generation_proto protoreflect.FileDescriptor

var file_aggchain_proof_generation_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5,
	0x04, 0x0a, 0x1c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x67, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6e, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x16, 0x6c, 0x31, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x33, 0x32, 0x52, 0x12, 0x6c, 0x31, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x72, 0x65, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x40, 0x0a,
	0x11, 0x6c, 0x31, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6c, 0x65,
	0x61, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x31, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x52,
	0x0e, 0x6c, 0x31, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x65, 0x61, 0x66, 0x12,
	0x4c, 0x0a, 0x19, 0x6c, 0x31, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f,
	0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x15, 0x6c, 0x31, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x72,
	0x65, 0x65, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x51, 0x0a,
	0x0a, 0x67, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73,
	0x12, 0x4d, 0x0a, 0x15, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x45, 0x78, 0x69, 0x74, 0x52, 0x13, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x45, 0x78, 0x69, 0x74, 0x73, 0x1a,
	0x55, 0x0a, 0x0e, 0x47, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf6, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x67, 0x67, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x61, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x44, 0x0a,
	0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x33, 0x32,
	0x52, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x32,
	0x7a, 0x0a, 0x14, 0x41, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x67, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x67, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2f, 0x61, 0x67, 0x67, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x67, 0x67, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_aggchain_proof_generation_proto_rawDescOnce sync.Once
	file_aggchain_proof_generation_proto_rawDescData = file_aggchain_proof_generation_proto_rawDesc
)

func file_aggchain_proof_generation_proto_rawDescGZIP() []byte {
	file_aggchain_proof_generation_proto_rawDescOnce.Do(func() {
		file_aggchain_proof_generation_proto_rawDescData = protoimpl.X.CompressGZIP(file_aggchain_proof_generation_proto_rawDescData)
	})
	return file_aggchain_proof_generation_proto_rawDescData
}

var file_aggchain_proof_generation_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_aggchain_proof_generation_proto_goTypes = []any{
	(*GenerateAggchainProofRequest)(nil),  // 0: proto.GenerateAggchainProofRequest
	(*GenerateAggchainProofResponse)(nil), // 1: proto.GenerateAggchainProofResponse
	nil,                                   // 2: proto.GenerateAggchainProofRequest.GerLeavesEntry
	(*FixedBytes32)(nil),                  // 3: proto.FixedBytes32
	(*L1InfoTreeLeaf)(nil),                // 4: proto.L1InfoTreeLeaf
	(*MerkleProof)(nil),                   // 5: proto.MerkleProof
	(*ImportedBridgeExit)(nil),            // 6: proto.ImportedBridgeExit
	(*ClaimFromMainnet)(nil),              // 7: proto.ClaimFromMainnet
}
var file_aggchain_proof_generation_proto_depIdxs = []int32{
	3, // 0: proto.GenerateAggchainProofRequest.l1_info_tree_root_hash:type_name -> proto.FixedBytes32
	4, // 1: proto.GenerateAggchainProofRequest.l1_info_tree_leaf:type_name -> proto.L1InfoTreeLeaf
	5, // 2: proto.GenerateAggchainProofRequest.l1_info_tree_merkle_proof:type_name -> proto.MerkleProof
	2, // 3: proto.GenerateAggchainProofRequest.ger_leaves:type_name -> proto.GenerateAggchainProofRequest.GerLeavesEntry
	6, // 4: proto.GenerateAggchainProofRequest.imported_bridge_exits:type_name -> proto.ImportedBridgeExit
	3, // 5: proto.GenerateAggchainProofResponse.local_exit_root_hash:type_name -> proto.FixedBytes32
	7, // 6: proto.GenerateAggchainProofRequest.GerLeavesEntry.value:type_name -> proto.ClaimFromMainnet
	0, // 7: proto.AggchainProofService.GenerateAggchainProof:input_type -> proto.GenerateAggchainProofRequest
	1, // 8: proto.AggchainProofService.GenerateAggchainProof:output_type -> proto.GenerateAggchainProofResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_aggchain_proof_generation_proto_init() }
func file_aggchain_proof_generation_proto_init() {
	if File_aggchain_proof_generation_proto != nil {
		return
	}
	file_bytes_proto_init()
	file_claim_proto_init()
	file_imported_bridge_exit_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aggchain_proof_generation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aggchain_proof_generation_proto_goTypes,
		DependencyIndexes: file_aggchain_proof_generation_proto_depIdxs,
		MessageInfos:      file_aggchain_proof_generation_proto_msgTypes,
	}.Build()
	File_aggchain_proof_generation_proto = out.File
	file_aggchain_proof_generation_proto_rawDesc = nil
	file_aggchain_proof_generation_proto_goTypes = nil
	file_aggchain_proof_generation_proto_depIdxs = nil
}
